// Code generated by entc, DO NOT EDIT.

package products

const (
	// Label holds the string label denoting the products type in the database.
	Label = "products"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldInfo holds the string denoting the info field in the database.
	FieldInfo = "info"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldCategorieID holds the string denoting the categorie_id field in the database.
	FieldCategorieID = "categorie_id"
	// EdgeUnion holds the string denoting the union edge name in mutations.
	EdgeUnion = "union"
	// Table holds the table name of the products in the database.
	Table = "products"
	// UnionTable is the table that holds the union relation/edge.
	UnionTable = "products"
	// UnionInverseTable is the table name for the Categories entity.
	// It exists in this package in order to avoid circular dependency with the "categories" package.
	UnionInverseTable = "categories"
	// UnionColumn is the table column denoting the union relation/edge.
	UnionColumn = "categorie_id"
)

// Columns holds all SQL columns for products fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldInfo,
	FieldPrice,
	FieldCategorieID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
